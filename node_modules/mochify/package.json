{
  "name": "mochify",
  "version": "2.1.1",
  "description": "TDD with Browserify, Mocha, PhantomJS and WebDriver",
  "keywords": [
    "mocha",
    "browserify",
    "watchify",
    "phantomjs",
    "webdriver",
    "selenium",
    "saucelabs",
    "tdd"
  ],
  "author": {
    "name": "Maximilian Antoni",
    "email": "mail@maxantoni.de",
    "url": "http://maxantoni.de"
  },
  "contributors": [
    {
      "name": "Andrey Popp",
      "email": "8mayday@gmail.com"
    },
    {
      "name": "JP Richardson",
      "email": "jprichardson@gmail.com"
    },
    {
      "name": "Jerome Gravel-Niquet",
      "email": "jeromegn@gmail.com"
    },
    {
      "name": "Barney",
      "email": "barney.carroll@gmail.com"
    },
    {
      "name": "Daniel Davidson",
      "email": "contact@dannydavidson.com"
    },
    {
      "name": "Fernando Lores",
      "email": "ferlores@gmail.com"
    },
    {
      "name": "Ryohei Ikegami",
      "email": "iofg2100@gmail.com"
    },
    {
      "name": "Max Goodman",
      "email": "c@chromakode.com"
    }
  ],
  "homepage": "https://github.com/mantoni/mochify.js",
  "engines": {
    "node": ">=0.10"
  },
  "bin": {
    "mochify": "bin/cmd.js"
  },
  "main": "lib/mochify.js",
  "scripts": {
    "lint": "jslint --color \"**/*.js\"",
    "start": "mocha --watch",
    "test": "npm run lint && mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mantoni/mochify.js.git"
  },
  "dependencies": {
    "browserify": "^6.3",
    "watchify": "^2.1",
    "coverify": "^1.0",
    "mocaccino": "^1.3",
    "mocha": "^2.0",
    "phantomic": "^1.0",
    "consolify": "^1.0",
    "through2": "^0.6",
    "resolve": "^1.0",
    "subarg": "^1.0",
    "glob": "^4.0",
    "min-wd": "^2.0",
    "brout": "^1.0",
    "source-mapper": "^1.0"
  },
  "devDependencies": {
    "jslint": "^0.6"
  },
  "files": [
    "bin",
    "lib",
    "README.md",
    "LICENSE"
  ],
  "license": "MIT",
  "readme": "# Mochify\n\n[![Build Status]](https://travis-ci.org/mantoni/mochify.js)\n[![SemVer]](http://semver.org)\n[![License]](https://github.com/mantoni/mochify.js/blob/master/LICENSE)\n\nTDD with Browserify, Mocha, PhantomJS and WebDriver\n\n- Fast roundtrip\n- No test HTML page\n- No server\n- Selenium WebDriver & SauceLabs support\n- Code coverage with [coverify][]\n- [Code coverage](#code-coverage-with-istanbul) with [istanbul][] using\n  [mochify-istanbul][] plugin\n- Short stack traces with relative paths\n- Works with most Mocha reporters\n\n![mochify](http://maxantoni.de/img/mochify-1.8.0.png)\n\n## Install\n\nThis will install Mochify in your current project and add it to the\n`devDependencies`:\n\n```\nnpm install mochify --save-dev\n```\n\n- Install Phantom.JS: `npm install phantomjs -g` or download from\n  <http://phantomjs.org/>\n- Make sure that the `phantomjs` executable is in your `PATH` or use\n  `--phantomjs <path>`\n\n## Usage\n\nConfigure `\"scripts\"` in your package.json so that your project ships with the\ntesting infrastructure:\n\n```\n\"devDependencies\" : {\n  \"mochify\"       : \"*\"\n},\n\"scripts\"         : {\n  \"start\"         : \"mochify --watch\"\n  \"phantom\"       : \"mochify\",\n  \"wd\"            : \"mochify --wd\",\n  \"cover\"         : \"mochify --cover\",\n  \"test\"          : \"npm run phantom && npm run wd && npm run cover\"\n}\n```\n\nTo run from the command line, either run `npm install mochify -g` to have\n`mochify` available globally, or from within your project directory run:\n\n```\nnode_modules/.bin/mochify\n```\n\n## Default behavior\n\nBrowserifies `./test/*.js`, decorated with a [Mocha test runner][], runs it in\nPhantomJS with [phantomic][] and pass the output back to your console. Cleans\nup your stack traces by mapping back to the original sources and throws out all\nthe lines from the test framework.\n\nRun `mochify --help` to see all available options.\n\n## Command line options\n\n- `--watch` or `-w` use [watchify][] to watch your files and run the tests on\n  change.\n- `--reporter` or `-R` changes the Mocha reporter (see further down).\n- `--grep` sets the Mocha grep option.\n- `--invert` sets the Mocha grep `invert` flag.\n- `--ui` or `-U` changes the Mocha UI. Defaults to `'bdd'`.\n- `--timeout` or `-t` changes the Mocha timeout. Defaults to `2000`.\n- `--require` or `-r` requires the given module.\n- `--debug` launches the WebKit debugger.\n- `--port` uses a specific port for the PhantomJS server.\n- `--phantomjs` uses a specific PhantomJS executable. If not specified,\n  `phantomjs` is expected on the `$PATH`.\n- `--cover` checks code coverage with [coverify][].\n- `--node` runs test cases on node (useful with `--cover`).\n- `--wd` use [min-webdriver][] to run the tests in multiple real browsers.\n- `--url` (only with `--wd`) runs the tests in the context of the given URL.\n- `--consolify output.html` generate a standalone HTML page with [consolify][].\n- `--transform` specifies a Browserify transform to add. Can be specified\n  multiple times. Options can be passed with [subargs][].\n- `--plugin` specifies a Browserify plugin to add. Can be specified multiple\n  times. Options can be passed with [subargs][].\n- `--extension` search for files with the extension in \"require\" statements.\n- `--yields` or `-y` changes the yield interval to allow pending I/O to happen.\n- `--version` or `-v` shows the Mochify version number.\n- `--help` or `-h` shows usage and all available options.\n\n## Selenium WebDriver setup\n\n- Download the «Selenium Server Standalone» JAR from here:\n  <https://code.google.com/p/selenium/downloads/list>\n- Except for Firefox, you will also need drivers for each browser.\n- The driver for Google Chrome can be found here:\n  <http://chromedriver.storage.googleapis.com/index.html>\n- Put the drivers in the same directory as the JAR file and run:\n\n```\njava -jar selenium-server-standalone-2.39.0.jar\n```\n\nCreate `.min-wd` in your project root:\n\n```\n{\n  \"hostname\"  : \"localhost\",\n  \"port\"      : 4444,\n  \"browsers\"  : [{\n    \"name\"    : \"internet explorer\",\n    \"version\" : \"9\"\n  }, {\n    \"name\"    : \"chrome\"\n  }, {\n    \"name\"    : \"firefox\"\n  }]\n}\n```\n\nThat's it! Now `mochify --wd` will run your Mocha test cases in the configured\nbrowsers simultaniously. If you installed mochify without `-g`, you will have\nto run `node_modules/.bin/mochify --wd`.\n\n## SauceLabs setup\n\nExport your SauceLabs credentials:\n\n```\nexport SAUCE_USERNAME=\"your-user-name\"\nexport SAUCE_ACCESS_KEY=\"your-access-key\"\n```\n\nEnable SauceLabs in your `.min-wd` file:\n\n```\n{\n  \"sauceLabs\": true\n}\n```\n\nFor more information about Selenium WebDriver and SourceLabs support can be\nfound on the [min-webdriver][] project page.\n\n## Reporters\n\nMocha reporters known to work:\n\n- min\n- dot (default)\n- list\n- spec\n- tap\n- json\n- doc\n- xunit\n- markdown\n- landing\n\nNote: Consuming the output of a machine readable reporter may not work as\nexpected with `--wd`.\n\n## API\n\n```js\nvar mochify = require('mochify');\n\nmochify('./test/*.js', {\n  reporter : 'tap',\n  cover    : true\n}).bundle();\n```\n\n- `mochify()` uses default settings and runs tests in `./test/*.js`\n- `mochify(paths)` specifies the paths, a space delimited list of globs\n- `mochify(opts)` configures options as described below\n- `mochify(paths, opts)` combines custom paths and options\n\nAll long form command line options can be used. E.g. `--node` can be configured\nas `{ node : true }`, `--reporter tab` as `{ reporter : 'tab' }` and so on.\n\nAdditional API options:\n\n- `output` a stream that receives the test output (e.g. [through2][])\n\n## Code coverage with Istanbul\n\nInstall the [mochify-istanbul][] plugin:\n\n```bash\n$ npm install mochify-istanbul --save-dev\n```\n\nUsing a `package.json` script that can be run with `npm run cover`:\n\n```\n\"scripts\" : {\n  \"cover\" : \"mochify --plugin [ mochify-istanbul --report cobertura ]\"\n}\n```\n\nUsing the API:\n\n```js\nvar mochify = require('mochify');\nvar istanbul = require('mochify-istanbul');\n\nmochify().plugin(istanbul, {\n  report: ['text', 'html', 'text-summary']\n}).bundle();\n```\n\n## Compatibility\n\n- Node >= 0.10\n- v2.x\n    - Browserify 6.x\n    - Mocha 2.x\n- v1.x\n    - Browserify 5.x\n    - Mocha 1.x\n- v0.x\n    - Browserify 4.x\n\n## License\n\nMIT\n\n[Build Status]: http://img.shields.io/travis/mantoni/mochify.js.svg\n[SemVer]: http://img.shields.io/:semver-%E2%9C%93-brightgreen.svg\n[License]: http://img.shields.io/npm/l/mochify.svg\n[watchify]: https://github.com/substack/watchify\n[coverify]: https://github.com/substack/coverify\n[istanbul]: https://github.com/gotwarlost/istanbul\n[mochify-istanbul]: https://github.com/ferlores/mochify-istanbul\n[min-webdriver]: https://github.com/mantoni/min-webdriver\n[Mocha test runner]: https://github.com/mantoni/mocaccino.js\n[phantomic]: https://github.com/mantoni/phantomic\n[consolify]: https://github.com/mantoni/consolify\n[subargs]: https://github.com/substack/subarg\n[through2]: https://github.com/rvagg/through2\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mantoni/mochify.js/issues"
  },
  "_id": "mochify@2.1.1",
  "dist": {
    "shasum": "92cbd1512bb64095ba9b16dc964b6afef6048c42"
  },
  "_from": "mochify@~2.1.1",
  "_resolved": "https://registry.npmjs.org/mochify/-/mochify-2.1.1.tgz"
}
